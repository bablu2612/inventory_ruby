<script src="https://cdn.jsdelivr.net/npm/sortablejs@latest/Sortable.min.js"></script>
<div class="rounded-md bg-green-50 p-4 flash_notice <%= params[:mut].present? ? "" : "d-none" %>">
  <div class="flex">
    <div class="flex-shrink-0">
      <!-- Heroicon name: mini/check-circle -->
      <svg class="h-5 w-5 text-green-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z" clip-rule="evenodd"></path>
      </svg>
    </div>
    <div class="ml-3">
      <p class="text-sm font-medium text-green-800 notice_message">Car detail was successfully <%= params[:mut] == "created" ? "created." : "updated"%></p>
    </div>
    <div class="ml-auto pl-3">
      <div class="-mx-1.5 -my-1.5">
        <button type="button" class="inline-flex rounded-md bg-green-50 p-1.5 text-green-500 hover:bg-green-100 focus:outline-none focus:ring-2 focus:ring-green-600 focus:ring-offset-2 focus:ring-offset-green-50">
          <span class="sr-only">Dismiss</span>
          <!-- Heroicon name: mini/x-mark -->
          <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
            <path d="M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z"></path>
          </svg>
        </button>
      </div>
    </div>
  </div>
</div>
<div class="appraisal_form">
<%= form_with(model: car_detail, multipart: true) do |form| %>
<div class="main_div max-w-[800px] mx-auto my-5 shadow-xl p-5">
   <div class="logo_main">
      <img src="<%= asset_path("logo_black.png")%>" class="w-[120px] m-auto">
   </div>
   <div class="main_header font-extrabold w-fit ml-auto mr-auto  mt-[50px] text-[#3c3838]">
      <h2 class="border-none pl-0 font-bold text-3xl"><%= params[:action] == "edit" ? "Edit Car Detail" : "Add a new Car" %></h2>
   </div>
   <div class="form_main_div w-full max-w-full mt-[40px]">
      <h6 class="font-black">Please fill out the following information:</h6>
      <form class="vehicle_appraisel_form mt-[10px]">
        
            <div class="form_group mb-4 mt-[11px] max-w-full w-full">
               <label class="text-slate-600 font-bold">
               Year<span class="text-red-500">*</span>
               </label>
               <%= form.text_field :year,placeholder: "Enter Year", class: "block rounded-md outline-none px-3 py-2 mt-2 w-full" %>
               <% if car_detail.errors.has_key?(:year) %>
               <div class="bg-red-50 text-red-500 px-3 py-2 font-medium rounded-lg mt-3">Year is required</div>
               <% end %>
            </div>

             <div class="form_group mb-4 mt-[11px] max-w-full w-full hidden">
               <label class="text-slate-600 font-bold">
               Body Type<span class="text-red-500">*</span>
               </label>
                <%= form.select :body_type, ["Compact", "Convertible", "Coupe","Crossover","Pickup","Sedan","SUV","Wagon"], class: "block rounded-md border-0 outline-none px-3 py-2 mt-2 w-full" %>

               <% if car_detail.errors.has_key?(:body_type) %>
               <div class="bg-red-50 text-red-500 px-3 py-2 font-medium rounded-lg mt-3">Body Type is required</div>
               <% end %>
            </div>


            <div class="form_group mb-4 mt-[11px] max-w-full w-full">
               <label class="text-slate-600 font-bold">
               Make<span class="text-red-500">*</span>
               </label>
               <%= form.text_field :make,placeholder: "Enter Make", class: "block rounded-md outline-none px-3 py-2 mt-2 w-full" %>
               <% if car_detail.errors.has_key?(:year) %>
               <div class="bg-red-50 text-red-500 px-3 py-2 font-medium rounded-lg mt-3">Year is required</div>
               <% end %>
            </div>
         
        
            <div class="form_group mb-4 mt-[11px] max-w-full w-full">
               <label class="text-slate-600 font-bold">
               Model<span class="text-red-500">*</span>
               </label>
               <%= form.text_field :model,placeholder: "Enter Model", class: "block rounded-md border-0 outline-none px-3 py-2 mt-2 w-full" %>
               <% if car_detail.errors.has_key?(:model) %>
               <div class="bg-red-50 text-red-500 px-3 py-2 font-medium rounded-lg mt-3">Model is required</div>
               <% end %>
            </div>

            <div class="form_group mb-4 mt-[11px] max-w-full w-full hidden">
               <label class="text-slate-600 font-bold">
               Drivetrain<span class="text-red-500">*</span>
               </label>
                <%= form.select :drivetrain, ["AWD/4WD", "Front Wheel Drive", "Rear Wheel Drive"], class: "block rounded-md border-0 outline-none px-3 py-2 mt-2 w-full" %>

               <% if car_detail.errors.has_key?(:drivetrain) %>
               <div class="bg-red-50 text-red-500 px-3 py-2 font-medium rounded-lg mt-3">Drivetrain is required</div>
               <% end %>
            </div>

            <div class="form_group mb-4 mt-[11px] max-w-full w-full hidden">
               <label class="text-slate-600 font-bold">
               Transmission<span class="text-red-500">*</span>
               </label>
                <%= form.select :transmission, ["Automatic", "Manual"], class: "block rounded-md border-0 outline-none px-3 py-2 mt-2 w-full" %>

               <% if car_detail.errors.has_key?(:transmission) %>
               <div class="bg-red-50 text-red-500 px-3 py-2 font-medium rounded-lg mt-3">Transmission is required</div>
               <% end %>
            </div>


            <div class="form_group mb-4 mt-[11px] max-w-full w-full">
               <label class="text-slate-600 font-bold">
               Fuel Type<span class="text-red-500">*</span>
               </label>
                              <%= form.select :fuel_type, ["Gasoline", "Diesel", "Electricity"], class: "block rounded-md border-0 outline-none px-3 py-2 mt-2 w-full" %>

               <% if car_detail.errors.has_key?(:fuel_type) %>
               <div class="bg-red-50 text-red-500 px-3 py-2 font-medium rounded-lg mt-3">Fuel Type is required</div>
               <% end %>
            </div>


            <div class="form_group mb-4 mt-[11px] max-w-full w-full">
               <label class="text-slate-600 font-bold">
               Trim<span class="text-red-500">*</span>
               </label>
               <%= form.text_field :trim,placeholder: "Enter Trim", class: "block rounded-md border-0 outline-none px-3 py-2 mt-2 w-full" %>
               <% if car_detail.errors.has_key?(:trim) %>
               <div class="bg-red-50 text-red-500 px-3 py-2 font-medium rounded-lg mt-3">Trim is required</div>
               <% end %>
            </div>
         
        
            <div class="form_group mb-4 mt-[11px] max-w-full w-full">
               <label class="text-slate-600 font-bold">
               Mileage<span class="text-red-500">*</span>
               </label>
               <%= form.number_field :mileage, placeholder: "Enter Mileage", class: "block rounded-md border-0 outline-none px-3 py-2 mt-2 w-full" %>
               <% if car_detail.errors.has_key?(:mileage) %>
               <div class="bg-red-50 text-red-500 px-3 py-2 font-medium rounded-lg mt-3">Mileage is required</div>
               <% end %>
            </div>
            <div class="form_group mb-4 mt-[11px] max-w-full w-full">
               <label class="text-slate-600 font-bold">
               Zip Code<span class="text-red-500">*</span>
               </label>
               <%= form.number_field :zip_code, placeholder: "Enter Zip Code", class: "block rounded-md border-0 outline-none px-3 py-2 mt-2 w-full" %>
               <% if car_detail.errors.has_key?(:zip_code) %>
               <div class="bg-red-50 text-red-500 px-3 py-2 font-medium rounded-lg mt-3">Zipcode is required</div>
               <% end %>
            </div>
        


         
            <div class="form_group mb-4 mt-[11px] max-w-full w-full hidden">
               <label class="text-slate-600 font-bold">
               MMR<span class="text-red-500">*</span>
               </label>
               <%= form.number_field :mmr, placeholder: "Enter MMR", class: "block rounded-md border-0 outline-none px-3 py-2 mt-2 w-full" %>
               <% if car_detail.errors.has_key?(:mmr) %>
               <div class="bg-red-50 text-red-500 px-3 py-2 font-medium rounded-lg mt-3">MMR is required</div>
               <% end %>
            </div>

            

            <div class="form_group mb-4 mt-[11px] max-w-full w-full">
               <label class="text-slate-600 font-bold">
               Min<span class="text-red-500">*</span>
               </label>
               <%= form.text_field :low, placeholder: "Enter min price", class: "block rounded-md border-0 outline-none px-3 py-2 mt-2 w-full" %>
               <% if car_detail.errors.has_key?(:low) %>
               <div class="bg-red-50 text-red-500 px-3 py-2 font-medium rounded-lg mt-3">Min is required</div>
               <% end %>
            </div>

            <div class="form_group mb-4 mt-[11px] max-w-full w-full">
               <label class="text-slate-600 font-bold">
               Max<span class="text-red-500">*</span>
               </label>
               <%= form.text_field :best, placeholder: "Enter max price", class: "block rounded-md border-0 outline-none px-3 py-2 mt-2 w-full" %>
               <% if car_detail.errors.has_key?(:best) %>
               <div class="bg-red-50 text-red-500 px-3 py-2 font-medium rounded-lg mt-3">Max is required</div>
               <% end %>
            </div>
         



      
        

           <div class="form_group mb-4 mt-[11px] max-w-full w-full">
               <label class="text-slate-600 font-bold">
               Vin#<span class="text-red-500">*</span>
               </label>
               <%= form.text_field :vin, placeholder: "Enter vin", class: "block rounded-md border-0 outline-none px-3 py-2 mt-2 w-full" %>
               <% if car_detail.errors.has_key?(:vin) %>
               <div class="bg-red-50 text-red-500 px-3 py-2 font-medium rounded-lg mt-3">VIN is required</div>
               <% end %>
            </div>
            


            <div class="form_group mb-4 mt-[11px] max-w-full w-full">
               <label class="text-slate-600 font-bold">
               Color<span class="text-red-500">*</span>
               </label>
               <%= form.text_field :color, placeholder: "Enter Color", class: "block rounded-md border-0 outline-none px-3 py-2 mt-2 w-full" %>
               <% if car_detail.errors.has_key?(:color) %>
               <div class="bg-red-50 text-red-500 px-3 py-2 font-medium rounded-lg mt-3">Color is required</div>
               <% end %>
            </div>
        

        
            <div class="form_group mb-4 mt-[11px] max-w-full w-full">
               <label class="text-slate-600 font-bold">
                Vehicle Condition <span class="text-red-500">*</span>
               </label>
               <%= form.select :vehicle_condition, ["Clean", "Minor damage", "Damage", "Accident", "Salvage"], class: "block rounded-md border-0 outline-none px-3 py-2 mt-2 w-full" %>
               <% if car_detail.errors.has_key?(:vehicle_condition) %>
               <div class="bg-red-50 text-red-500 px-3 py-2 font-medium rounded-lg mt-3">Vehicle Condition is required</div>
               <% end %>
            </div>
            <div class="form_group mb-4 mt-[11px] max-w-full w-full">
               <label class="text-slate-600 font-bold">
                Title Status <span class="text-red-500">*</span>
               </label>
               <%= form.select :title_status, ["Paid off", "Financed", "Leased"], class: "block rounded-md border-0 outline-none px-3 py-2 mt-2 w-full" %>
               <% if car_detail.errors.has_key?(:title_status) %>
               <div class="bg-red-50 text-red-500 px-3 py-2 font-medium rounded-lg mt-3">Title Status is required</div>
               <% end %>
            </div>
        

             


        <div class="flex gap-[15px] align-items-end mt-[20px]">
          <div class="upload_files_main w-full">
              <div class="max-w-full">
                <label for="file_upload" id="drop_zone" class="flex justify-center w-full h-32 px-4 transition bg-white border-2 border-gray-300 border-dashed rounded-md appearance-none cursor-pointer hover:border-gray-400 focus:outline-none"> <span class="flex items-center space-x-2 flex-col justify-center">
                  <svg xmlns="http://www.w3.org/2000/svg" class="w-[26px] text-black" fill="none" viewBox="0 0 24 24"
                    stroke="currentColor" stroke-width="2">
                    <path stroke-linecap="round" stroke-linejoin="round"
                      d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12" />
                  </svg>
                  <span class="font-medium text-gray-600 mt-2 ml-0">
                  Drop Images to Attach, or
                  <span class="text-blue-900 text-capitalize underline">browse</span> </span>
                  </span>
                  <input type="file" name="multi_images[]" id="file_upload" class="hidden" multiple="true" accept="image/png, image/gif, image/jpeg"> </label>
              </div>
              <div id="preview-parent"></div>
          </div>
        </div>
        
          <div class="form_group mb-4 mt-[11px]">
  
                <%= form.submit "Submit", class: "group relative h-12 w-48 overflow-hidden rounded-lg bg-blue-500 text-white text-lg shadow relative text-white font-bold opacity-1 bg-[#0080ff]" %>
              
          </div>
      </form>
      </div>
      <div class="sponsers_comapnies mt-[40px] hidden">
         <div class="row1 flex justify-between gap-3 align-content-center">
            <div class="w-[33.33%] flex-auto border-[1px] border-slate-200 rounded flex align-items-center p-2 justify-center">
               <img src="<%= asset_path("deallerTrackLogo.jpeg")%>" class="max-w-[120px] w-full">
            </div>
            <div class="w-[33.33%] flex-auto border-[1px] border-slate-200 rounded flex align-items-center p-2 justify-center">
               <img src="<%= asset_path("autoNationLogo.jpeg")%>" class="max-w-[120px] w-full">
            </div>
            <div class="w-[33.33%] flex-auto border-[1px] border-slate-200 rounded flex align-items-center p-2 justify-center">
               <img src="<%= asset_path("edmundsLogo.jpeg")%>" class="max-w-[120px] w-full">
            </div>
            <div class="w-[33.33%] flex-auto border-[1px] border-slate-200 rounded flex align-items-center p-2 justify-center">
               <img src="<%= asset_path("autoTraderLogo.jpeg")%>" class="max-w-[120px] w-full">
            </div>
            <div class="w-[33.33%] flex-auto border-[1px] border-slate-200 rounded flex align-items-center p-2 justify-center">
               <img src="<%= asset_path("ManheimLogo.jpeg")%>" class="max-w-[120px] w-full">
            </div>
            <div class="w-[33.33%] flex-auto border-[1px] border-slate-200 rounded flex align-items-center p-2 justify-center">
               <img src="<%= asset_path("kbb_logo.png")%>" class="max-w-[120px] w-full ">
            </div>
         </div>
      </div>
   </div>
   <% end %>
</div>
<style>
   form :where(input, select) {
   height: 36.5px;
   box-shadow: none !important; */
   } 
</style>
<script>
   var sortedFiles = [];
   $("form").submit(function(e){
      updateOrder();
      e.preventDefault();
      var formData = new FormData($("form")[0]);
      let images = {}
      sortedFiles.map((image, i)=>{
         formData.append('car_detail[images][]', image);
      })
      
      $.ajax({
         url: $("form").attr("action"),
         data: formData,
         cache: false,
         processData: false,
         method: 'post',
         contentType: false,
         type: 'post', // For jQuery < 1.9
         success: function(data){
            <% if params[:id].present? %>
               window.location.replace(location.pathname + "?mut=updated")
            <% else %>
               window.location.replace(location.pathname + "?mut=created")
            <% end%>
           
         }
      });

   })

   function carAttchmentModal() {
      document.getElementById('car_attachement_modal').classList.toggle('hidden')
   }
   // Get the drop zone element
   var dropZone = document.getElementById('drop_zone');
   // Get the file input element
   var fileInput = document.getElementById('file_upload');
   // Add event listeners for drag and drop
   dropZone.addEventListener('dragover', handleDragOver, false);
   dropZone.addEventListener('dragleave', handleDragLeave, false);
   dropZone.addEventListener('drop', handleDrop, false);
   // Add event listener for manual file selection
   fileInput.addEventListener('change', handleFileSelect, false);

   function handleDragOver(event) {
      event.preventDefault();
      dropZone.classList.add('border-blue-600');
   }

   function handleDragLeave(event) {
      event.preventDefault();
      dropZone.classList.remove('border-blue-600');
   }

   function handleDrop(event) {
      event.preventDefault();
      dropZone.classList.remove('border-blue-600');
      // Get the dropped files
      var files = event.dataTransfer.files;
      // Update the label text with the number of files dropped
      if (files.length === 1) {
         dropZone.querySelector('span').innerHTML = '1 file attached';
      }
      else {
         dropZone.querySelector('span').innerHTML = files.length + ' files attached';
      }
      // Add the files to the input element
      fileInput.files = files;
   }

   function handleFileSelect(event) {
      // Get the selected files
      var files = event.target.files;
      // Update the label text with the number of files selected
      if (files.length === 1) {
         dropZone.querySelector('span').innerHTML = '1 file attached';
      }
      else {
         dropZone.querySelector('span').innerHTML = files.length + ' files attached';
      }
   }

   // DataTransfer allows updating files in input
   var dataTransfer = new DataTransfer();

   const form = document.querySelector("#form");
   const input = document.querySelector("#file_upload");

   input.addEventListener("change", () => {
   let files = input.files;
   for (let i = 0; i < files.length; i++) {
      // A new upload must not replace images but be added
      dataTransfer.items.add(files[i]);

      // Generate previews using FileReader
      let reader, preview, previewImage;
      reader = new FileReader();

      preview = document.createElement("div");
      previewImage = document.createElement("img");
      deleteButton = document.createElement("button");
      orderInput = document.createElement("input");

      preview.classList.add("preview");
      document.querySelector("#preview-parent").appendChild(preview);
      deleteButton.setAttribute("data-index", i);
      deleteButton.setAttribute("onclick", "deleteImage(this)");
      deleteButton.innerText = "Delete";
      orderInput.type = "hidden";
      orderInput.name = "images_order[" + files[i].lastModified + "]";

      preview.appendChild(previewImage);
      preview.appendChild(deleteButton);
      preview.appendChild(orderInput);

      reader.readAsDataURL(files[i]);
      reader.onloadend = () => {
        previewImage.src = reader.result;
      };
   }

   // Update order values for all images
   updateOrder();
   input.files = dataTransfer.files;
      // Finally update input files that will be sumbitted
   });

   const updateOrder = () => {
      let orderInputs = document.querySelectorAll('input[name^="images_order"]')
      let deleteButtons = document.querySelectorAll('button[data-index]')
      sortedFiles = []
      for (let i = 0; i < orderInputs.length; i++) {
         orderInputs[i].value = [i]
         deleteButtons[i].dataset.index = [i]
         deleteButtons[i].classList = "remove_image_button"
         deleteButtons[i].innerHTML= `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Layer_1" x="0px" y="0px" width="122.881px" height="122.88px" viewBox="0 0 122.881 122.88" enable-background="new 0 0 122.881 122.88" xml:space="preserve"><g><path fill-rule="evenodd" clip-rule="evenodd" d="M61.44,0c33.933,0,61.441,27.507,61.441,61.439 c0,33.933-27.508,61.44-61.441,61.44C27.508,122.88,0,95.372,0,61.439C0,27.507,27.508,0,61.44,0L61.44,0z M81.719,36.226 c1.363-1.363,3.572-1.363,4.936,0c1.363,1.363,1.363,3.573,0,4.936L66.375,61.439l20.279,20.278c1.363,1.363,1.363,3.573,0,4.937 c-1.363,1.362-3.572,1.362-4.936,0L61.44,66.376L41.162,86.654c-1.362,1.362-3.573,1.362-4.936,0c-1.363-1.363-1.363-3.573,0-4.937 l20.278-20.278L36.226,41.162c-1.363-1.363-1.363-3.573,0-4.936c1.363-1.363,3.573-1.363,4.936,0L61.44,56.504L81.719,36.226 L81.719,36.226z"/></g></svg>`
      
         //custom
         let indexField = $("input[name='images_order["+input.files[i]?.lastModified+"]']");
         
         sortedFiles[indexField?.val()] = input.files[i]
         console.log("sortedfiles", sortedFiles)
      }     

   }

   const deleteImage = (item) => {
      // Remove image from DataTransfer and update input
      dataTransfer.items.remove(item.dataset.index);
      input.files = dataTransfer.files;
      if(input.files.length == 0){
         dropZone.querySelector('span').innerHTML =
         `
            <svg xmlns="http://www.w3.org/2000/svg" class="w-[26px] text-black" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
               <path stroke-linecap="round" stroke-linejoin="round" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path>
            </svg>
            <span class="font-medium text-gray-600 mt-2 ml-0">
            Drop Images to Attach, or
            <span class="text-blue-900 text-capitalize underline">browse</span> </span>                  
         `
      }else{
         dropZone.querySelector('span').innerHTML = input.files.length + "attached"
      }
      // Delete element from DOM and update order
      item.parentNode.remove();
      updateOrder();
   };


   <% if @car_detail.images.attached? %>
      let toRenderImages = []
      let url;
      Promise.all([
      <% @car_detail.images.order(:id).each_with_index do |image, i| %>
         fetch('<%= rails_blob_path(image, only_path: true) %>')
          .then(response => response.blob())
          .then(blob => {
            var file = new File([blob], '<%= image.filename %>');
            dataTransfer.items.add(file);
            toRenderImages[<%= i %>] = file;
          }),
      <% end %>
       ]).then(() => {
      defaultImageRender();
      input.files = dataTransfer.files
    });
   
  <% end %>

   function defaultImageRender(){
      dataTransfer.clearData();
      toRenderImages.map((file,i )=>{
         // Generate previews using FileReader
         let reader, preview, previewImage;
         reader = new FileReader();
         preview = document.createElement("div");
         previewImage = document.createElement("img");
         deleteButton = document.createElement("button");
         orderInput = document.createElement("input");

         preview.classList.add("preview");
         document.querySelector("#preview-parent").appendChild(preview);
         deleteButton.setAttribute("data-index", i);
         deleteButton.setAttribute("onclick", "deleteImage(this)");
         deleteButton.classList = "remove_image_button"
         deleteButton.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Layer_1" x="0px" y="0px" width="122.881px" height="122.88px" viewBox="0 0 122.881 122.88" enable-background="new 0 0 122.881 122.88" xml:space="preserve"><g><path fill-rule="evenodd" clip-rule="evenodd" d="M61.44,0c33.933,0,61.441,27.507,61.441,61.439 c0,33.933-27.508,61.44-61.441,61.44C27.508,122.88,0,95.372,0,61.439C0,27.507,27.508,0,61.44,0L61.44,0z M81.719,36.226 c1.363-1.363,3.572-1.363,4.936,0c1.363,1.363,1.363,3.573,0,4.936L66.375,61.439l20.279,20.278c1.363,1.363,1.363,3.573,0,4.937 c-1.363,1.362-3.572,1.362-4.936,0L61.44,66.376L41.162,86.654c-1.362,1.362-3.573,1.362-4.936,0c-1.363-1.363-1.363-3.573,0-4.937 l20.278-20.278L36.226,41.162c-1.363-1.363-1.363-3.573,0-4.936c1.363-1.363,3.573-1.363,4.936,0L61.44,56.504L81.719,36.226 L81.719,36.226z"/></g></svg>`;
         orderInput.type = "hidden";
         orderInput.name = "images_order[" + file.lastModified + "]";

         preview.appendChild(previewImage);
         preview.appendChild(deleteButton);
         preview.appendChild(orderInput);

         reader.readAsDataURL(file);
         reader.onloadend = () => {
            previewImage.src = reader.result;
         };
         dataTransfer.items.add(file);
      })
      sortedFiles = toRenderImages
   }
   
   // I make the images sortable by means of SortableJS
   const el = document.getElementById("preview-parent");
   new Sortable(el, {
      animation: 150,

      // Update order values every time a change is made
      onEnd: (event) => {
         updateOrder();
      }
   });
</script>